---
title: "Practical 1"
format: html
editor: visual
---

\section{Practical One}

1\.

```{r}

#Find rows that have NA
data("airquality")
airquality
na_rows = airquality[rowSums(is.na(airquality))>0,]
na_rows

```

2.  

```{r}

#Calculate means
mean_ozone = mean(airquality$Ozone,na.rm=TRUE)
mean_temp  = mean(airquality$Temp,na.rm=TRUE)

#Calculate standard deviations
sd_ozone = sd(airquality$Ozone,na.rm=TRUE)
sd_temp  = sd(airquality$Temp,na.rm=TRUE)

#Find maximum values
max_ozone = max(airquality$Ozone,na.rm=TRUE)
max_temp  = max(airquality$Temp,na.rm=TRUE)
```

3\.

```{r}

data("cars")
Data_cars = data.frame(cars)

#The response variable
Response  = as.vector(Data_cars$dist)

#The design matrix
Design    = cbind(1,Data_cars$speed)

#Calculate beta

beta = solve(t(Design)%*%Design)%*%t(Design)%*%Response

beta

```

4\.

```{r}
#| echo: true

#Use lm function to estimate beta
model = lm(dist~speed,Data_cars)
summary(model)
```

5\.

```{r}

#Calculate beta
#Calc std error
#Calc p value
  
f<- function(X,Y){
 Response_ <- Y
 Design_ <- X
 
 #Calculate betaa
 beta_ <- solve(t(Design_)%*%Design_)%*%t(Design_)%*%Response
 
  n <- length(Response)
  k <- ncol(beta_)

 #Calculate Standard error
 Residuals <- Response - Design%*%beta_
 RSS <- sum(Residuals^2)
 Res_variance <- RSS/(n-k)

 std_err <- t(sqrt(Res_variance%*%diag(solve(t(Design_)%*%Design_))))
 
 #Calculate t statistic
 t_stat <- beta_/std_err
 
 #Degrees of freedom
 df_ <- n - k
 
 # The p value
 p_val <- 2*pt(t_stat,df = df_,lower.tail = FALSE)
 
 #Return list
 return(list("Coefficients"= beta_,"Std error" = std_err,"t_stat" = t_stat,"pvalue" = p_val))
  
}
b <- f(Design,Response)
b
```
